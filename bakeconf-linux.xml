<configuration>
  <modules>

    <module name="dce-meta-dev">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
      </source>
      <depends_on name="ns-3-dev-dce" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="libaspect" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <depends_on name="bash" optional="True"/>
      <build type="none">
      </build>
    </module>

    <module name="dce-ns3-dev">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
      </source>
      <depends_on name="dce-meta-dev" optional="False"/>
      <build type="waf" objdir="build">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --prefix=$INSTALLDIR"/>
     </build>
    </module>

    <module name="dce-linux-dev">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
      </source>
      <depends_on name="dce-meta-dev" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38-fix-01" optional="False"/>
      <depends_on name="lksctp-dev" optional="True"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-linux-dev-gcov">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
      </source>
      <depends_on name="dce-meta-dev" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38-fix-01" optional="False"/>
      <depends_on name="dce-quagga-dev" optional="False"/>
      <depends_on name="dce-umip-dev" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch --enable-gcov"/>
      </build>
    </module>

    <module name="dce-linux-inkernel">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="3f4dfb7d8461"/>
      </source>
      <depends_on name="dce-meta-1.5" optional="False"/>
      <depends_on name="iproute2-dev" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
        <attribute name="supported_os" value="linux;linux2"/>
        <!-- assume the bake.py build is executed under arch/sim/test/buildtop/ -->
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --enable-kernel-stack=$SRCDIR/../../../../../../arch/"/>
         <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce ; ln -s -f $SRCDIR/../../../../../../arch/lib/tools/libsim-linux.so liblinux.so"/>
      </build>
    </module>

    <module name="mptcp_v0.86">
      <source type="git">
        <attribute name="url" value="git://github.com/multipath-tcp/mptcp"/>
        <attribute name="module_directory" value="mptcp"/>
        <attribute name="revision" value="mptcp_v0.86"/>
      </source>
      <build type="make" objdir="no">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="pre_installation" value="cd $SRCDIR;git remote add dce git://github.com/direct-code-execution/net-next-sim.git; git fetch dce; git merge dce/sim-ns3-3.5.0-branch; echo 'CONFIG_MPTCP=y' >> arch/sim/defconfig; sed 's/CONFIG_SYN_COOKIES=y/\#CONFIG_SYN_COOKIES=y/' arch/sim/defconfig >a; mv a arch/sim/defconfig"/>
        <attribute name="configure_arguments" value="defconfig ARCH=sim"/>
        <attribute name="build_arguments" value="library ARCH=sim"/>
        <attribute name="no_installation" value="True"/>
        <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce; cp $SRCDIR/libsim-linux3.5.7.so ./libsim-linux3.5.7-mptcp.so; ln -s -f libsim-linux3.5.7-mptcp.so liblinux.so"/>
      </build>
    </module>

    <module name="mptcp_v0.87">
      <source type="git">
        <attribute name="url" value="git://github.com/multipath-tcp/mptcp"/>
        <attribute name="module_directory" value="mptcp"/>
        <attribute name="revision" value="mptcp_v0.87"/>
      </source>
      <build type="make" objdir="no">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="pre_installation" value="cd $SRCDIR;git remote add dce git://github.com/direct-code-execution/net-next-sim.git; git fetch dce; git merge dce/sim-ns3-3.10.0-branch; echo 'CONFIG_MPTCP=y' >> arch/sim/defconfig; sed 's/CONFIG_SYN_COOKIES=y/\#CONFIG_SYN_COOKIES=y/' arch/sim/defconfig >a; mv a arch/sim/defconfig"/>
        <attribute name="configure_arguments" value="defconfig ARCH=sim"/>
        <attribute name="build_arguments" value="library ARCH=sim"/>
        <attribute name="no_installation" value="True"/>
        <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce; cp $SRCDIR/libsim-linux3.10.9.so ./libsim-linux3.10.9-mptcp.so; ln -s -f libsim-linux3.10.9-mptcp.so liblinux.so"/>
      </build>
    </module>

    <module name="iproute-mptcp">
      <source type="git">
        <attribute name="url" value="git://github.com/multipath-tcp/iproute-mptcp.git"/>
        <attribute name="module_directory" value="iproute-mptcp"/>
        <attribute name="revision" value="49687a0dff890bf753a06357959b8bbab18b9d2a"/>
      </source>
      <depends_on name="libdb-dev" optional="False"/>
      <depends_on name="bison" optional="False"/>
      <depends_on name="flex" optional="False"/>
      <depends_on name="libssl-dev" optional="False"/>
      <build type="make" objdir="yes">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="patch" value="$SRCDIR/../ns-3-dce/utils/iproute-mptcp.patch"/>
        <attribute name="pre_installation" value="$SRCDIR/configure"/>
        <attribute name="LDFLAGS" value="-pie"/>
        <attribute name="ignore_predefined_flags" value="True"/>
        <attribute name="install_arguments" value="DESTDIR=$INSTALLDIR" />
        <attribute name="build_arguments" value="CCOPTS+=-fpic CCOPTS+=-D_GNU_SOURCE CCOPTS+=-O0 CCOPTS+=-U_FORTIFY_SOURCE LDFLAGS=-pie LDFLAGS+=-rdynamic DEFINES+=-I$SRCDIR/../mptcp/arch/sim/include/ DEFINES+=-I$SRCDIR/../mptcp/include/uapi/ DEFINES+=-I$SRCDIR/../mptcp/include"/>
      </build>
    </module>

    <module name="dce-linux-mptcp">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="dce-meta-1.1" optional="False"/>
      <depends_on name="mptcp_v0.87" optional="False"/>
      <depends_on name="iproute-mptcp" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../mptcp/arch"/>
      </build>
    </module>

    <module name="libpcap-dev">
      <source type="system_dependency">
        <attribute name="dependency_test" value="pcap.h"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="libpcap-dev"/>
        <attribute name="name_yum" value="libpcap-devel"/>
        <attribute name="more_information" value="Didn't find:   libpcap-dev package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="libexpat-dev">
      <source type="system_dependency">
        <attribute name="dependency_test" value="expat.h"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="libexpat1-dev"/>
        <attribute name="name_yum" value="expat-devel"/>
        <attribute name="more_information" value="Didn't find:   libexpat-dev package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="ccnx">
      <source type="archive">
        <attribute name="url" value="http://www.ccnx.org/releases/ccnx-0.6.2.tar.gz"/>
        <attribute name="extract_directory" value="ccnx-0.6.2"/>
      </source>
      <depends_on name="libpcap-dev" optional="False"/>
      <depends_on name="libexpat-dev" optional="False"/>
      <build type="make" objdir="yes">
        <attribute name="pre_installation" value="cd $SRCDIR;INSTALL_BASE=$INSTALLDIR ./configure;mkdir $INSTALLDIR/include;mkdir $INSTALLDIR/lib;mkdir $INSTALLDIR/bin"/>
        <attribute name="build_arguments" value="MORE_LDLIBS=-pie COPT+=-rdynamic"/>
        <attribute name="new_variable" value="INSTALL_BASE=$INSTALLDIR" />
      </build>
     </module>

    <module name="iperf">
      <source type="archive">
        <attribute name="url" value="http://sourceforge.net/projects/iperf/files/iperf-2.0.5.tar.gz"/>
        <attribute name="extract_directory" value="iperf-2.0.5"/>
      </source>
      <build type="make" objdir="yes">
        <attribute name="pre_installation" value="cd $SRCDIR;./configure --prefix=$INSTALLDIR"/>
        <attribute name="patch" value="$SRCDIR/../ns-3-dce/utils/iperf_4_dce.patch"/>
        <attribute name="build_arguments" value="LDFLAGS=-pie LDFLAGS+=-rdynamic"/>
      </build>
     </module>

    <module name="libdb-dev">
      <source type="system_dependency">
        <attribute name="dependency_test" value="db_185.h"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="libdb-dev"/>
        <attribute name="name_yum" value="db4-devel"/>
        <attribute name="more_information" value="Didn't find:   libdb-dev package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="bison">
      <source type="system_dependency">
        <attribute name="dependency_test" value="bison"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="bison"/>
        <attribute name="name_yum" value="bison"/>
        <attribute name="more_information" value="The bison tool is not installed, try to install them (bison)"/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="flex">
      <source type="system_dependency">
        <attribute name="dependency_test" value="flex"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="flex"/>
        <attribute name="name_yum" value="flex"/>
        <attribute name="more_information" value="The flex tool is not installed, try to install them (flex)"/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="libsysfs-dev">
      <source type="system_dependency">
        <attribute name="dependency_test" value="libsysfs.h"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="libsysfs-dev"/>
        <attribute name="name_yum" value="libsysfs-devel"/>
        <attribute name="more_information" value="Didn't find:   libsysfs-dev package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="libssl-dev">
      <source type="system_dependency">
        <attribute name="dependency_test" value="md5.h"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="libssl-dev"/>
        <attribute name="name_yum" value="openssl-devel"/>
        <attribute name="more_information" value="Didn't find:   libssl-dev package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="lksctp-dev">
      <source type="system_dependency">
        <attribute name="dependency_test" value="sctp.h"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="lksctp-dev"/>
        <attribute name="name_yum" value="lksctp-tools-devel"/>
        <attribute name="more_information" value="Didn't find:   lksctp-dev package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

     <module name="iproute-2.6.38">
      <source type="archive">
        <attribute name="url" value="http://www.linuxgrill.com/anonymous/iproute2/NEW-OSDL/iproute2-2.6.38.tar.bz2"/>
      </source>
      <depends_on name="libdb-dev" optional="False"/>
      <depends_on name="bison" optional="False"/>
      <depends_on name="flex" optional="False"/>
      <depends_on name="libssl-dev" optional="False"/>
      <build type="make" objdir="yes">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="pre_installation" value="$SRCDIR/configure"/>
        <attribute name="LDFLAGS" value="-pie"/>
        <attribute name="ignore_predefined_flags" value="True"/>
         <attribute name="install_arguments" value="DESTDIR=$INSTALLDIR" />
        <attribute name="build_arguments" value="CCOPTS+=-fpic CCOPTS+=-D_GNU_SOURCE CCOPTS+=-O0 CCOPTS+=-U_FORTIFY_SOURCE CCOPTS+=-g LDFLAGS=-pie LDFLAGS+=-rdynamic"/>
      </build>
     </module>

     <module name="iproute-2.6.38-fix-01">
      <source type="archive">
        <attribute name="url" value="http://www.linuxgrill.com/anonymous/iproute2/NEW-OSDL/iproute2-2.6.38.tar.bz2"/>
      </source>
      <depends_on name="libdb-dev" optional="False"/>
      <depends_on name="bison" optional="False"/>
      <depends_on name="flex" optional="False"/>
      <depends_on name="libssl-dev" optional="False"/>
      <build type="make" objdir="yes">
        <attribute name="patch" value="$SRCDIR/../ns-3-dce/utils/iproute-2.6.38-fix-01.patch"/>
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="pre_installation" value="$SRCDIR/configure"/>
        <attribute name="LDFLAGS" value="-pie"/>
        <attribute name="ignore_predefined_flags" value="True"/>
         <attribute name="install_arguments" value="DESTDIR=$INSTALLDIR" />
        <attribute name="build_arguments" value="CCOPTS+=-fpic CCOPTS+=-D_GNU_SOURCE CCOPTS+=-O0 CCOPTS+=-U_FORTIFY_SOURCE CCOPTS+=-g LDFLAGS=-pie LDFLAGS+=-rdynamic"/>
      </build>
     </module>

     <module name="iproute2-dev">
       <source type="git">
         <attribute name="url" value="https://git.kernel.org/pub/scm/linux/kernel/git/shemminger/iproute2.git"/>
         <attribute name="revision" value="net-next"/>
         <attribute name="module_directory" value="iproute2-dev"/>
       </source>
       <depends_on name="libdb-dev" optional="False"/>
       <depends_on name="bison" optional="False"/>
       <depends_on name="flex" optional="False"/>
       <depends_on name="libssl-dev" optional="False"/>
       <build type="make" objdir="yes">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="pre_installation" value="$SRCDIR/configure"/>
         <attribute name="LDFLAGS" value="-pie"/>
         <attribute name="ignore_predefined_flags" value="True"/>
         <attribute name="install_arguments" value="DESTDIR=$INSTALLDIR" />
         <attribute name="build_arguments" value="DEFINES+=-I$SRCDIR/../../../../../../arch/lib/include/ DEFINES+=-I$SRCDIR/../../../../../../arch/lib/include/generated/ DEFINES+=-I$SRCDIR/../../../../../../include/uapi/ DEFINES+=-I$SRCDIR/../../../../../../include CCOPTS+=-fpic CCOPTS+=-D_GNU_SOURCE CCOPTS+=-O0 CCOPTS+=-U_FORTIFY_SOURCE CCOPTS+=-g LDFLAGS=-pie LDFLAGS+=-rdynamic"/>
       </build>
     </module>

    <module name="ns-3-dev-dce">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dev"/>
      </source>
      <depends_on name="netanim" optional="True"/>
      <depends_on name="pybindgen" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-tests"/>
      </build>
    </module>

     <module name="net-next-sim-2.6.36">
       <source type="git">
         <attribute name="url" value="https://github.com/direct-code-execution/net-next-sim.git"/>
         <attribute name="module_directory" value="net-next-sim-2.6.36"/>
         <attribute name="revision" value="sim-ns3-2.6.36-branch"/>
         <attribute name="fetch_option" value="--depth=1"/>
       </source>
       <build type="make" objdir="no">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="configure_arguments" value="defconfig ARCH=sim"/>
         <attribute name="build_arguments" value="library ARCH=sim"/>
         <attribute name="no_installation" value="True"/>
         <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce; cp $SRCDIR/libsim-linux2.6.36.so ./; ln -s -f libsim-linux2.6.36.so liblinux.so"/>
       </build>
     </module>

     <module name="net-next-sim-3.4.0">
       <source type="git">
         <attribute name="url" value="https://github.com/direct-code-execution/net-next-sim.git"/>
         <attribute name="module_directory" value="net-next-sim-3.4.0"/>
         <attribute name="revision" value="sim-ns3-3.4.0-branch"/>
         <attribute name="fetch_option" value="--depth=1"/>
       </source>
       <build type="make" objdir="no">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="configure_arguments" value="defconfig ARCH=sim"/>
         <attribute name="build_arguments" value="library ARCH=sim"/>
         <attribute name="no_installation" value="True"/>
         <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce; cp $SRCDIR/libsim-linux3.4.0.so ./; ln -s -f libsim-linux3.4.0.so liblinux.so"/>
       </build>
     </module>

     <module name="net-next-sim-3.7.0">
       <source type="git">
         <attribute name="url" value="https://github.com/direct-code-execution/net-next-sim.git"/>
         <attribute name="module_directory" value="net-next-sim-3.7.0"/>
         <attribute name="revision" value="sim-ns3-3.7.0-branch"/>
         <attribute name="fetch_option" value="--depth=1"/>
       </source>
       <build type="make" objdir="no">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="configure_arguments" value="defconfig ARCH=sim"/>
         <attribute name="build_arguments" value="library ARCH=sim"/>
         <attribute name="no_installation" value="True"/>
         <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce; cp $SRCDIR/libsim-linux3.7.0.so ./; ln -s -f libsim-linux3.7.0.so liblinux.so"/>
       </build>
     </module>

     <module name="dce-freebsd-dev">
       <source type="mercurial">
         <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
         <attribute name="module_directory" value="ns-3-dce"/>
       </source>
       <depends_on name="dce-meta-dev" optional="False"/>
       <depends_on name="freebsd-sim-10.0.0" optional="False"/>
       <build type="waf" objdir="yes" sourcedir="ns-3-dce">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --enable-kernel-stack=$SRCDIR/../freebsd-sim/sys"/>
       </build>
     </module>

     <module name="freebsd-sim-dev">
       <source type="git">
         <attribute name="url" value="git://github.com/direct-code-execution/freebsd-sim.git"/>
         <attribute name="module_directory" value="freebsd-sim"/>
         <attribute name="revision" value="sim-ns3-dev-branch"/>
         <attribute name="fetch_option" value="--depth=1"/>
       </source>
       <build type="make" objdir="no">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="build_arguments" value="buildkernel -C sys/sim"/>
         <attribute name="no_installation" value="True"/>
         <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce; cp $SRCDIR/libsim-freebsd.git.so ./; ln -s -f libsim-freebsd.git.so libfreebsd.so"/>
       </build>
     </module>

     <module name="freebsd-sim-10.0.0">
       <source type="git">
         <attribute name="url" value="git://github.com/direct-code-execution/freebsd-sim.git"/>
         <attribute name="module_directory" value="freebsd-sim"/>
         <attribute name="revision" value="sim-ns3-10.0.0"/>
         <attribute name="fetch_option" value="--depth=1"/>
       </source>
       <build type="make" objdir="no">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="build_arguments" value="buildkernel -C sys/sim"/>
         <attribute name="no_installation" value="True"/>
         <attribute name="post_installation" value="mkdir -p $INSTALLDIR/bin_dce; cd $INSTALLDIR/bin_dce; cp $SRCDIR/libsim-freebsd.git.so ./; ln -s -f libsim-freebsd.git.so libfreebsd.so"/>
       </build>
     </module>

     <module name="wget">
      <source type="archive">
        <attribute name="url" value="http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz"/>
        <attribute name="extract_directory" value="wget-1.15"/>
      </source>
      <build type="make" objdir="yes">
        <attribute name="pre_installation" value="cd $SRCDIR; CFLAGS='-fPIC -g' LDFLAGS='-pie -rdynamic' ./configure --disable-opie --disable-digest --disable-ntlm --disable-largefile --disable-threads --disable-nls --disable-rpath --disable-iri --without-ssl --without-zlib --without-libiconv-prefix --without-libintl-prefix --without-libpth-prefix --without-included-regex --prefix=$INSTALLDIR"/>
      </build>
     </module>

    <module name="thttpd">
      <source type="archive">
        <attribute name="url" value="http://www.acme.com/software/thttpd/thttpd-2.25b.tar.gz"/>
        <attribute name="extract_directory" value="thttpd-2.25b"/>
      </source>
      <build type="make" objdir="yes">/"
        <attribute name="pre_installation" value="cd $SRCDIR; sed &quot;s/rm conftest.c/rm -f conftests.c/&quot; configure >a; mv a configure; chmod 755 configure;./configure --prefix=$INSTALLDIR"/>
        <attribute name="patch" value="$SRCDIR/../ns-3-dce/utils/dce-thttpd.patch"/>
         <attribute name="install_arguments" value="-n" />
         <attribute name="build_arguments" value="thttpd"/>
         <attribute name="post_installation" value="cd $SRCDIR; mkdir $INSTALLDIR/bin_dce; /bin/cp -f thttpd  $INSTALLDIR/bin_dce"/>
      </build>
     </module>

    <module name="bash">
      <source type="archive">
        <attribute name="url" value="http://ftp.gnu.org/gnu/bash/bash-4.1.tar.gz"/>
        <attribute name="extract_directory" value="bash-4.1"/>
      </source>
      <build type="make" objdir="yes">
	<attribute name="pre_installation" value="cd $SRCDIR; CFLAGS='-g -fPIC' LDFLAGS='-pie -rdynamic' CFLAGS_FOR_BUILD='-g -fPIC' ./configure --without-bash-malloc --prefix=$INSTALLDIR"/>
      </build>
     </module>

     <module name="iputils">
       <source type="archive">
         <attribute name="url" value="http://www.skbuff.net/iputils/iputils-s20101006.tar.bz2"/>
       </source>
       <depends_on name="libsysfs-dev" optional="False"/>
       <!-- note: iputils does not have 'make install' -->
       <build type="inline"  classname="IputilsModuleBuild">
         <attribute name="patch" value="$SRCDIR/../ns-3-dce/myscripts/ns-3-dce-quagga/utils/iputils-ping6.patch"/>
         <attribute name="supported_os" value="linux;linux2"/>
         <code>class IputilsModuleBuild(InlineModuleBuild):
    def __init__(self):
        InlineModuleBuild.__init__(self)
    def build(self, env, jobs):
           if self.attribute('patch').value != '':
               self.threat_patch(env, self.attribute('patch').value)
           jobstr=[]
           if not jobs == -1:
               jobstr = ['-j', str(jobs)]
           env.run(['make', 'CFLAGS=-fpic', 'CFLAGS+=-D_GNU_SOURCE', 'CFLAGS+=-g',
           'CFLAGS+=-Wstrict-prototypes', 'CFLAGS+=-Wall', 'LDFLAGS=-pie', 'LDFLAGS+=-rdynamic',
           'ping', 'ping6'] + jobstr,
           directory=env.srcdir)
           env.run(['mkdir', '-p' , env.installdir + '/bin_dce/'],
           directory=env.srcdir)
           env.run(['cp', 'ping', 'ping6', env.installdir + '/bin_dce'],
           directory=env.srcdir)
    def clean(self, env):
           env.run(['make', 'clean'], directory=env.srcdir)
    def check_version(self, env):
           return True</code>
       </build>
     </module>

     <!-- umip related modules -->
     <module name="dce-umip-dev">
       <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
        <attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
       </source>
       <depends_on name="dce-quagga-dev" optional="False"/>
       <depends_on name="dce-meta-dev" optional="False"/>
       <depends_on name="umip" optional="False"/>
       <build type="none">
         <attribute name="supported_os" value="linux;linux2"/>
         <!-- attribute name="configure_arguments" value="configure -prefix=$INSTALLDIR"/ -->
       </build>
     </module>

     <module name="umip">
       <source type="git">
         <attribute name="url" value="git://git.umip.org/umip.git"/>
         <attribute name="revision" value="v1.0"/>
       </source>
       <build type="autotools" objdir="no">
         <attribute name="supported_os" value="linux;linux2"/>
         <attribute name="maintainer" value="yes" />
         <attribute name="configure_arguments" value="./configure CFLAGS='-fPIC -g'  LDFLAGS='-pie -rdynamic' --prefix=$INSTALLDIR --enable-vt --with-builtin-crypto"/>
         <attribute name="install_arguments" value="-n" />
         <attribute name="post_installation" value="cd $SRCDIR; mkdir $INSTALLDIR/bin_dce; /bin/cp -f src/mip6d  $INSTALLDIR/bin_dce"/>
       </build>
     </module>

    <!-- quagga related modules -->
    <module name="dce-quagga-dev">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
        <attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
      </source>
       <depends_on name="dce-meta-dev" optional="False"/>
       <depends_on name="quagga" optional="False"/>
       <depends_on name="iputils" optional="False"/>
      <build type="none">
        <attribute name="supported_os" value="linux;linux2"/>
        <!-- attribute name="configure_arguments" value="configure -prefix=$INSTALLDIR"/ -->
     </build>
    </module>

    <module name="indent">
      <source type="system_dependency">
        <attribute name="dependency_test" value="indent"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="indent"/>
        <attribute name="name_yum" value="indent"/>
        <attribute name="more_information" value="The indent tool is not installed, try to install them (indent)"/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="gawk">
      <source type="system_dependency">
        <attribute name="dependency_test" value="gawk"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="gawk"/>
        <attribute name="name_yum" value="gawk"/>
        <attribute name="more_information" value="The gawk is not installed, try to install them (gawk)"/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

     <module name="quagga">
       <source type="archive">
        <!-- some of mirror sever of gnu.org isn't available.. -->
        <!-- attribute name="url" value="http://download.savannah.gnu.org/releases/quagga/quagga-0.99.20.tar.gz"/ -->
        <attribute name="url" value="http://pkgs.fedoraproject.org/lookaside/pkgs/quagga/quagga-0.99.20.tar.gz/64cc29394eb8a4e24649d19dac868f64/quagga-0.99.20.tar.gz"/>
        <attribute name="extract_directory" value="quagga-0.99.20"/>
       </source>
       <depends_on name="indent" optional="False"/>
       <depends_on name="gawk" optional="False"/>
       <build type="make" objdir="yes">
         <attribute name="pre_installation" value="cd $SRCDIR; CFLAGS='-fPIC -g' LDFLAGS='-pie -rdynamic' ./configure --disable-shared --enable-static --disable-user --disable-group --disable-capabilities --prefix=$INSTALLDIR"/>
         <attribute name="install_arguments" value="-n" />
         <attribute name="post_installation" value="cd $SRCDIR; mkdir $INSTALLDIR/bin_dce; /bin/cp zebra/zebra $INSTALLDIR/bin_dce;/bin/cp ripd/ripd $INSTALLDIR/bin_dce;/bin/cp ripngd/ripngd $INSTALLDIR/bin_dce;/bin/cp ospfd/ospfd $INSTALLDIR/bin_dce;/bin/cp ospf6d/ospf6d $INSTALLDIR/bin_dce;/bin/cp bgpd/bgpd $INSTALLDIR/bin_dce"/>
       </build>
     </module>

    <module name="click-dev">
      <source type="git">
	<attribute name="url" value="git://github.com/kohler/click.git"/>
      </source>
      <build type="autotools" objdir="yes">
	<attribute name="configure_arguments" value="../configure --prefix=$INSTALLDIR --exec-prefix=$INSTALLDIR -enable-userlevel --disable-linuxmodule --enable-nsclick --enable-wifi"/>
	<attribute name="post_installation" value="mkdir $INSTALLDIR/lib; cp -r $OBJDIR/include $INSTALLDIR/lib/."/>
      </build>
    </module>

    <module name="click-ns-3.17">
      <source type="git">
	<attribute name="url" value="git://github.com/kohler/click.git"/>
	<attribute name="revision" value="056d2c0a75baaf196fca2622ff9eb80f28038bc0"/>
      </source>
      <build type="autotools" objdir="yes">
	<attribute name="configure_arguments" value="../configure --prefix=$INSTALLDIR --exec-prefix=$INSTALLDIR -enable-userlevel --disable-linuxmodule --enable-nsclick --enable-wifi"/>
	<attribute name="post_installation" value="mkdir $INSTALLDIR/lib; cp -r $OBJDIR/include $INSTALLDIR/lib/."/>
      </build>
    </module>

    <module name="click-ns-3.20">
      <source type="git">
	<attribute name="url" value="git://github.com/kohler/click.git"/>
	<attribute name="revision" value="0ac37dc30b0386f3c3d2d990f3d855b8887b4a13"/>
      </source>
      <build type="autotools" objdir="yes">
	<attribute name="configure_arguments" value="../configure --prefix=$INSTALLDIR --exec-prefix=$INSTALLDIR -enable-userlevel --disable-linuxmodule --enable-nsclick --enable-wifi"/>
	<attribute name="post_installation" value="mkdir $INSTALLDIR/lib; cp -r $OBJDIR/include $INSTALLDIR/lib/."/>
      </build>
    </module>

    <module name="click-2.0.1">
      <source type="git">
	<attribute name="url" value="git://github.com/kohler/click.git"/>
	<attribute name="revision" value="8847f68461856418c409f4de4165412b3ec2cade"/>

      </source>
      <build type="autotools" objdir="yes">
	<attribute name="configure_arguments" value="../configure -enable-userlevel --disable-linuxmodule --enable-nsclick --enable-wifi"/>
	<!--	<attribute name="post_installation" value="mkdir $INSTALLDIR/lib; cp -r $OBJDIR/include $INSTALLDIR/lib/.; cp -r $SRCDIR/include $INSTALLDIR/lib"/>
	-->
      </build>
    </module>

    <module name="libxml2-dev">
      <source type="system_dependency">
	<attribute name="dependency_test" value="xmlIO.h"/>
	<attribute name="try_to_install" value="True"/>
	<attribute name="name_yum" value="libxml2-devel"/>
	<attribute name="name_yast" value="libxml2-devel"/>
	<attribute name="name_apt-get" value="libxml2-dev"/>
	<attribute name="more_information" value="Didn't find:   the libxml2-dev library, try to install it!"/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="openflow-jpelkey">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/jpelkey3/openflow"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="no_installation" value="True"/>

        <!-- It complains if the lib directory exists, so I am removing the lib directory. Another
             thing is that it try to install things by default, so the instalation is not required-->

	<attribute name="pre_installation" value="mv $INSTALLDIR/lib $INSTALLDIR/libTmp"/>
	<attribute name="post_installation" value="mkdir $INSTALLDIR/lib; mv $INSTALLDIR/libTmp/* $INSTALLDIR/lib/.; rm -rf $INSTALLDIR/libTmp" />
      </build>
	<depends_on name="libxml2-dev" optional="False"/>
    </module>

    <module name="openflow-dev">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/openflow"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
      </build>
	<depends_on name="libxml2-dev" optional="False"/>
    </module>

    <module name="openflow-ns-3.17">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/openflow"/>
        <attribute name="revision" value="bb2869a6bbe1"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
      </build>
	<depends_on name="libxml2-dev" optional="False"/>
    </module>

    <module name="gccxml-ns3">
      <source type="git">
        <attribute name="url" value="git://github.com/gccxml/gccxml.git"/>
        <attribute name="module_directory" value="gccxml"/>
        <attribute name="revision" value="ab651a2aa866351bdd089a4bf1d57f6a9bec2a66"/>
      </source>
      <build type="cmake" objdir="yes">
      </build>
    </module>

    <module name="pygccxml">
      <source type="archive">
	<attribute name="url" value="https://pypi.python.org/packages/source/p/pygccxml/pygccxml-v1.6.2.tar.gz"/>
      </source>
      <build type="python" objdir="yes">
      </build>
      <depends_on name="gccxml-ns3" optional="False"/>
      <depends_on name="setuptools" optional="False"/>
    </module>

    <module name="pygccxml-1.0.0">
      <source type="archive">
	<attribute name="url" value="http://downloads.sourceforge.net/project/pygccxml/pygccxml/pygccxml-1.0/pygccxml-1.0.0.zip"/>
      </source>
      <build type="python" objdir="yes">
      </build>
      <depends_on name="gccxml-ns3" optional="False"/>
      <depends_on name="setuptools" optional="False"/>
    </module>

    <module name="pygccxml-1.6.2">
      <source type="archive">
	<attribute name="url" value="https://pypi.python.org/packages/source/p/pygccxml/pygccxml-v1.6.2.tar.gz"/>
      </source>
      <build type="python" objdir="yes">
      </build>
      <depends_on name="gccxml-ns3" optional="False"/>
      <depends_on name="setuptools" optional="False"/>
    </module>

    <module name="python-dev">
      <source type="system_dependency">
        <attribute name="dependency_test" value="Python.h"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="python-dev"/>
        <attribute name="name_yum" value="python-devel"/>
        <attribute name="more_information" value="The python-dev is not installed, try to install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="pygraphviz">
      <source type="system_dependency">
        <attribute name="dependency_test" value="(_gv.so or _graphviz.so)"/>
        <attribute name="try_to_install" value="False"/>
        <attribute name="name_apt-get" value="python-pygraphviz"/>
        <attribute name="name_yum" value="graphviz-python"/>
        <attribute name="name_yum" value="py27-pygraphviz"/>
        <attribute name="more_information" value="The pygraphviz is not installed, try to install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="pygoocanvas">
      <source type="system_dependency">
        <attribute name="dependency_test" value="goocanvasmodule.so or libgoocanvas.a"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="python-pygoocanvas"/>
        <attribute name="name_yum" value="pygoocanvas"/>
        <attribute name="name_port" value="pygoocanvas"/>
        <attribute name="more_information" value="The pygoocanvas is not installed, try to install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="setuptools">
      <source type="system_dependency">
        <attribute name="dependency_test" value="easy_install"/>
        <attribute name="try_to_install" value="False"/>
        <attribute name="name_apt-get" value="python-setuptools"/>
        <attribute name="name_yum" value="python-setuptools"/>
        <attribute name="name_port" value="py-setuptools"/>
        <attribute name="more_information" value="The python-setuptools package is not installed, try to install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="pyviz-prerequisites">
      <source type="none">
      </source>
      <depends_on name="python-dev" optional="True"/>
      <depends_on name="pygraphviz" optional="True"/>
      <depends_on name="pygoocanvas" optional="True"/>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="pybindgen">
      <source type="bazaar">
	<attribute name="url" value="https://launchpad.net/pybindgen"/>
<!--	<attribute name="revision" value="revno:825"/>
-->
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="build_arguments" value="--generate-version"/>
      </build>
      <depends_on name="pygccxml" optional="True"/>
      <depends_on name="python-dev" optional="True"/>
    </module>

    <module name="pybindgen-0.16.0.825">
      <source type="bazaar">
	<attribute name="url" value="https://launchpad.net/pybindgen"/>
	<attribute name="revision" value="revno:825"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="build_arguments" value="--generate-version"/>
      </build>
    </module>

    <module name="pybindgen-0.16.0.831">
      <source type="bazaar">
	<attribute name="url" value="https://launchpad.net/pybindgen"/>
	<attribute name="revision" value="revno:831"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="build_arguments" value="--generate-version"/>
      </build>
    </module>

    <module name="pybindgen-0.16.0.834">
      <source type="bazaar">
	<attribute name="url" value="https://launchpad.net/pybindgen"/>
	<attribute name="revision" value="revno:834"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="build_arguments" value="--generate-version"/>
      </build>
    </module>

    <module name="pybindgen-0.17.0.868">
      <source type="bazaar">
	<attribute name="url" value="https://launchpad.net/pybindgen"/>
	<attribute name="revision" value="revno:868"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="build_arguments" value="--generate-version"/>
      </build>
    </module>

    <module name="pybindgen-0.17.0.876">
      <source type="bazaar">
	<attribute name="url" value="https://launchpad.net/pybindgen"/>
	<attribute name="revision" value="revno:876"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="build_arguments" value="--generate-version"/>
      </build>
    </module>

    <module name="pybindgen-0.17.0.886">
      <source type="bazaar">
	<attribute name="url" value="https://launchpad.net/pybindgen"/>
	<attribute name="revision" value="revno:886"/>
      </source>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
	<attribute name="build_arguments" value="--generate-version"/>
      </build>
    </module>

    <module name="g++">
      <source type="system_dependency">
        <attribute name="dependency_test" value="g\+\+"/>
        <attribute name="try_to_install" value="False"/>
        <attribute name="more_information" value="g++ is not installed, try to install it or talk to your system administrator"/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="nsc-dev">
      <source type="mercurial">
	<attribute name="url" value="https://secure.wand.net.nz/mercurial/nsc"/>
      </source>
      <!-- problem: scons has no generic command-line support for builddir and installdir -->
      <build type="inline"  classname="NscModuleBuild">
	<attribute name="supported_os" value="linux;linux2"/>
	<code>class NscModuleBuild(InlineModuleBuild):
    def __init__(self):
        InlineModuleBuild.__init__(self)
    def build(self, env, jobs):
        import os
        import shutil

        jobstr=[]
        if not jobs == -1:
            jobstr = ['-j', str(jobs)]
        env.run(['python', os.path.join(env.srcdir, 'scons.py'),
                 'prefix=' + env.installdir, 'install'] + jobstr,
                directory=env.srcdir )
        srcLib = os.path.join(env.srcdir, 'lib')
        files = os.listdir(srcLib)
        destination = os.path.join(env.installdir, 'lib')
        for file in files:
             try:
                 shutil.copy2(os.path.join(srcLib, file), destination)
             except Exception as e:
                 print ("   > Error executing copy : " + str(e) + "\n")

    def clean(self, env):
        env.run(['python', os.path.join(env.srcdir, 'scons.py'), '-c'],
                directory=env.srcdir)
    def check_version(self, env):
        return True</code>
      </build>
    </module>

   <module name="nsc-0.5.3">
      <source type="mercurial">
	<attribute name="url" value="https://secure.wand.net.nz/mercurial/nsc"/>
	<attribute name="revision" value="08c391d0660a"/>
      </source>
      <!-- problem: scons has no generic command-line support for builddir and installdir -->
      <build type="inline"  classname="NscModuleBuild">
	<attribute name="supported_os" value="linux;linux2"/>
	<code>class NscModuleBuild(InlineModuleBuild):
    def __init__(self):
        InlineModuleBuild.__init__(self)
    def build(self, env, jobs):
        import os
        import shutil

        jobstr=[]
        if not jobs == -1:
            jobstr = ['-j', str(jobs)]
        env.run(['python', os.path.join(env.srcdir, 'scons.py'),
                 'prefix=' + env.installdir, 'install'] + jobstr,
                directory=env.srcdir )
        srcLib = os.path.join(env.srcdir, 'lib')
        env._logger.commands.write("LibDir: " + srcLib +"\n")
        destination = os.path.join(env.installdir, 'lib')
        env._logger.commands.write("DstDir: " + destination +"\n")
	if not os.path.exists(destination):
    		os.makedirs(destination)
        files = os.listdir(srcLib)
        env._logger.commands.write("Files:"+str(files)+"\n")
        for file in files:
             env._logger.commands.write(file + "->" + destination +"\n")
             try:
                 shutil.copy2(os.path.join(srcLib, file), destination)
             except Exception as e:
                 print ("   > Error executing copy : " + str(e) + "\n")

    def clean(self, env):
        env.run(['python', os.path.join(env.srcdir, 'scons.py'), '-c'],
                directory=env.srcdir)
    def check_version(self, env):
        return True</code>
      </build>
    </module>


    <module name="qt4">
      <source type="system_dependency">
	<attribute name="dependency_test" value="qobject.h and qapplication.h and (qmake or qmake-qt4)"/>
	<attribute name="try_to_install" value="True"/>
	<attribute name="name_yum" value="qt4-devel"/>
	<attribute name="name_apt-get" value="qt4-dev-tools"/>
	<attribute name="more_information" value="Didn't find:   QT 4, download and install it from http://qt.nokia.com/downloads/"/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="libc-debug">
      <source type="system_dependency">
        <!-- copy-pasted from elf-loader/extract-system-config.py -->
        <attribute name="dependency_test" value="/usr/lib64/debug/lib64/ld-2.11.2.so.debug or /usr/lib/debug/lib64/ld-linux-x86-64.so.2.debug or /usr/lib/debug/ld-linux-x86-64.so.2 or /usr/lib/debug/lib/ld-linux.so.2.debug or /usr/lib/debug/ld-linux.so.2 or /usr/lib/debug/lib/i386-linux-gnu/ld-2.13.so or /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.13.so or /usr/lib/debug/lib/ld-2.10.1.so or /usr/lib/debug/lib/ld-2.11.1.so or /usr/lib/debug/lib/ld-2.12.1.so or /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.15.so or /usr/lib/debug/lib/i386-linux-gnu/ld-2.15.so or /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.17.so or /usr/lib/debug/lib/i386-linux-gnu/ld-2.17.so"/>
        <attribute name="try_to_install" value="False"/> <!-- should be fixed -->
        <attribute name="name_apt-get" value="libc6-dbg"/>
        <attribute name="name_yum" value="glibc-debuginfo"/>
        <attribute name="more_information" value="Didn't find:   libc debug package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="elf-loader">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/thehajime/elf-loader"/>
      </source>
      <depends_on name="libc-debug" optional="False"/>
      <build type="make" objdir="no">
        <attribute name="configure_arguments" value="vdl-config.h"/>
        <attribute name="install_arguments" value="PREFIX=$INSTALLDIR"/>
      </build>
    </module>

    <module name="libaspect">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/thehajime/libaspect"/>
      </source>
      <build type="make" objdir="no">
        <attribute name="install_arguments" value="PREFIX=$INSTALLDIR"/>
      </build>
    </module>

    <module name="BRITE">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/BRITE"/>
      </source>
      <build type="make" objdir="no">
        <attribute name="no_installation" value="True"/>
        <attribute name="supported_os" value="linux;linux2;darwin"/>
      </build>
    </module>

    <module name="netanim">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/netanim"/>
      </source>
      <build type="make" objdir="no">
	<attribute name="pre_installation" value="cd $SRCDIR;qmake NetAnim.pro or cd $SRCDIR;qmake-qt4 NetAnim.pro or cd $SRCDIR;qmake -spec macx-g++ NetAnim.pro"/>
      </build>
      <depends_on name="qt4" optional="False"/>
      <depends_on name="g++" optional="False"/>
    </module>

   <module name="netanim-3.103">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/jabraham3/netanim-3.103"/>
        <attribute name="revision" value="f33a02df3740"/>
      </source>
      <build type="make" objdir="no">
        <attribute name="pre_installation" value="cd $SRCDIR;qmake NetAnim.pro or cd $SRCDIR;qmake-qt4 NetAnim.pro or cd $SRCDIR;qmake -spec macx-g++ NetAnim.pro"/>
      </build>
      <depends_on name="qt4" optional="False"/>
      <depends_on name="g++" optional="False"/>
    </module>

   <module name="netanim-3.104">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/jabraham3/netanim-3.104"/>
        <attribute name="revision" value="a22e3de633ef"/>
      </source>
      <build type="make" objdir="no">
        <attribute name="pre_installation" value="cd $SRCDIR;qmake NetAnim.pro or cd $SRCDIR;qmake-qt4 NetAnim.pro or cd $SRCDIR;qmake -spec macx-g++ NetAnim.pro"/>
      </build>
      <depends_on name="qt4" optional="False"/>
      <depends_on name="g++" optional="False"/>
    </module>

   <module name="netanim-3.105">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/netanim"/>
        <attribute name="revision" value="c9866156ebf3"/>
      </source>
      <build type="make" objdir="no">
        <attribute name="pre_installation" value="cd $SRCDIR;qmake NetAnim.pro or cd $SRCDIR;qmake-qt4 NetAnim.pro or cd $SRCDIR;qmake -spec macx-g++ NetAnim.pro"/>
      </build>
      <depends_on name="qt4" optional="False"/>
      <depends_on name="g++" optional="False"/>
    </module>

  <module name="ns-3-allinone">
      <source type="none"/>
      <depends_on name="netanim" optional="True"/>
      <depends_on name="nsc-dev" optional="True"/>
      <depends_on name="pybindgen" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-dev" optional="True"/>
      <depends_on name="openflow-dev" optional="True"/>
      <depends_on name="pygccxml-1.6.2" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="BRITE" optional="True"/>
      <depends_on name="ns-3-dev" optional="False"/>
      <build type="none"/>
  </module>

  <module name="ns-3-dev">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3-dev"/>
      </source>
      <depends_on name="netanim" optional="True"/>
      <depends_on name="pybindgen" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-examples --enable-tests"/>
      </build>
  </module>

    <module name="ns-3.17">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3.17"/>
      </source>
      <depends_on name="netanim-3.103" optional="True"/>
      <depends_on name="pybindgen-0.16.0.825" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-examples --enable-tests"/>
      </build>
    </module>

    <module name="ns-allinone-3.17">
      <source type="none"/>
      <depends_on name="netanim-3.103" optional="True"/>
      <depends_on name="nsc-0.5.3" optional="True"/>
      <depends_on name="pybindgen-0.16.0.825" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-ns-3.17" optional="True"/>
      <depends_on name="openflow-ns-3.17" optional="True"/>
      <depends_on name="pygccxml-1.0.0" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="ns-3.17" optional="False"/>
      <build type="none"/>
    </module>

    <module name="ns-3.18">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3.18"/>
        <attribute name="revision" value="cfbc9491d7e7"/>
      </source>
      <depends_on name="netanim-3.103" optional="True"/>
      <depends_on name="pybindgen-0.16.0.831" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-examples --enable-tests"/>
      </build>
    </module>

    <module name="ns-3.18.1">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3.18"/>
      </source>
      <depends_on name="netanim-3.103" optional="True"/>
      <depends_on name="pybindgen-0.16.0.834" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-examples --enable-tests"/>
      </build>
    </module>

    <module name="ns-3.19">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3.19"/>
      </source>
      <depends_on name="netanim-3.104" optional="True"/>
      <depends_on name="pybindgen-0.16.0.834" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-examples --enable-tests"/>
      </build>
    </module>

    <module name="ns-3.20">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3.20"/>
      </source>
      <depends_on name="netanim-3.105" optional="True"/>
      <depends_on name="pybindgen-0.17.0.868" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-examples --enable-tests"/>
      </build>
    </module>

    <module name="ns-3.21">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3.21"/>
      </source>
      <depends_on name="netanim-3.105" optional="True"/>
      <depends_on name="pybindgen-0.17.0.876" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --enable-examples --enable-tests"/>
      </build>
    </module>

    <module name="ns-3.22">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/ns-3.22"/>
      </source>
      <!-- depends_on name="netanim-3.105" optional="True"/ -->
      <depends_on name="pybindgen-0.17.0.886" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <build type="waf" objdir="yes">
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="ns-allinone-3.18">
      <source type="none"/>
      <depends_on name="netanim-3.103" optional="True"/>
      <depends_on name="nsc-0.5.3" optional="True"/>
      <depends_on name="pybindgen-0.16.0.831" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-ns-3.17" optional="True"/>
      <depends_on name="openflow-ns-3.17" optional="True"/>
      <depends_on name="pygccxml-1.0.0" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="ns-3.18" optional="False"/>
      <build type="none"/>
    </module>

    <module name="ns-allinone-3.18.1">
      <source type="none"/>
      <depends_on name="netanim-3.103" optional="True"/>
      <depends_on name="nsc-0.5.3" optional="True"/>
      <depends_on name="pybindgen-0.16.0.834" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-ns-3.17" optional="True"/>
      <depends_on name="openflow-ns-3.17" optional="True"/>
      <depends_on name="pygccxml-1.0.0" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="ns-3.18.1" optional="False"/>
      <build type="none"/>
    </module>

    <module name="ns-allinone-3.19">
      <source type="none"/>
      <depends_on name="netanim-3.104" optional="True"/>
      <depends_on name="nsc-0.5.3" optional="True"/>
      <depends_on name="pybindgen-0.16.0.834" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-ns-3.17" optional="True"/>
      <depends_on name="openflow-ns-3.17" optional="True"/>
      <depends_on name="pygccxml-1.0.0" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="ns-3.19" optional="False"/>
      <build type="none"/>
    </module>

    <module name="ns-allinone-3.20">
      <source type="none"/>
      <depends_on name="netanim-3.105" optional="True"/>
      <depends_on name="nsc-0.5.3" optional="True"/>
      <depends_on name="pybindgen-0.17.0.868" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-ns-3.20" optional="True"/>
      <depends_on name="openflow-ns-3.17" optional="True"/>
      <depends_on name="pygccxml-1.0.0" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="BRITE" optional="True"/>
      <depends_on name="ns-3.20" optional="False"/>
      <build type="none"/>
    </module>

    <module name="ns-allinone-3.21">
      <source type="none"/>
      <depends_on name="netanim-3.105" optional="True"/>
      <depends_on name="nsc-0.5.3" optional="True"/>
      <depends_on name="pybindgen-0.17.0.876" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-ns-3.20" optional="True"/>
      <depends_on name="openflow-ns-3.17" optional="True"/>
      <depends_on name="pygccxml-1.0.0" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="BRITE" optional="True"/>
      <depends_on name="ns-3.21" optional="False"/>
      <build type="none"/>
    </module>

    <module name="ns-allinone-3.22">
      <source type="none"/>
      <depends_on name="netanim-3.105" optional="True"/>
      <depends_on name="nsc-0.5.3" optional="True"/>
      <depends_on name="pybindgen-0.17.0.886" optional="True"/>
      <depends_on name="pyviz-prerequisites" optional="True"/>
      <depends_on name="click-ns-3.20" optional="True"/>
      <depends_on name="openflow-ns-3.17" optional="True"/>
      <depends_on name="pygccxml-1.6.2" optional="True"/>
      <depends_on name="gccxml-ns3" optional="True"/>
      <depends_on name="BRITE" optional="True"/>
      <depends_on name="ns-3.22" optional="False"/>
      <build type="none"/>
    </module>

    <module name="dce-meta-1.0">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.0"/>
      </source>
      <depends_on name="ns-3.17" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <build type="none" />
    </module>

    <module name="dce-ns3-1.0">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.0"/>
      </source>
      <depends_on name="dce-meta-1.0" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="dce-linux-1.0">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.0"/>
      </source>
      <depends_on name="dce-meta-1.0" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-quagga-1.0">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
	<attribute name="revision" value="dce-1.0"/>
      </source>
      <depends_on name="quagga" optional="False"/>
      <depends_on name="dce-meta-1.0" optional="False"/>
      <depends_on name="iputils" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <module name="dce-umip-1.0">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
	<attribute name="revision" value="dce-1.0"/>
      </source>
      <depends_on name="dce-linux-1.0" optional="False"/>
      <depends_on name="dce-quagga-1.0" optional="False"/>
      <depends_on name="dce-meta-1.0" optional="False"/>
      <depends_on name="umip" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <!-- dce-1.1.1 -->
    <module name="dce-1.1.1-patches">
      <source type="git">
        <attribute name="url" value="git://gist.github.com/7615085.git"/>
      </source>
      <build type="none"/>
    </module>

    <module name="dce-meta-1.1.1">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="ns-3.18.1" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <depends_on name="dce-1.1.1-patches" optional="False"/>
      <build type="none">
        <attribute name="patch" value="$SRCDIR/../dce-1.1.1-patches/dce-1.1-ns3-18.1.patch"/>
      </build>
    </module>

    <module name="dce-ns3-1.1.1">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="dce-meta-1.1.1" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="dce-linux-1.1.1">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="dce-meta-1.1.1" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-quagga-1.1.1">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
	<attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="quagga" optional="False"/>
      <depends_on name="dce-meta-1.1.1" optional="False"/>
      <depends_on name="iputils" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <module name="dce-umip-1.1.1">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
	<attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="dce-linux-1.1.1" optional="False"/>
      <depends_on name="dce-quagga-1.1.1" optional="False"/>
      <depends_on name="dce-meta-1.1.1" optional="False"/>
      <depends_on name="umip" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <!-- dce-1.1 -->
    <module name="dce-meta-1.1">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="ns-3.18" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <build type="none">
      </build>
    </module>

    <module name="dce-ns3-1.1">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="dce-meta-1.1" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="dce-linux-1.1">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="dce-meta-1.1" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-quagga-1.1">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
	<attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="quagga" optional="False"/>
      <depends_on name="dce-meta-1.1" optional="False"/>
      <depends_on name="iputils" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <module name="dce-umip-1.1">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
	<attribute name="revision" value="dce-1.1"/>
      </source>
      <depends_on name="dce-linux-1.1" optional="False"/>
      <depends_on name="dce-quagga-1.1" optional="False"/>
      <depends_on name="dce-meta-1.1" optional="False"/>
      <depends_on name="umip" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <!-- dce-1.2 -->
    <module name="dce-meta-1.2">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.2"/>
      </source>
      <depends_on name="ns-3.19" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <build type="none">
      </build>
    </module>

    <module name="dce-ns3-1.2">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.2"/>
      </source>
      <depends_on name="dce-meta-1.2" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="dce-linux-1.2">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.2"/>
      </source>
      <depends_on name="dce-meta-1.2" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-quagga-1.2">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
	<attribute name="revision" value="dce-1.2"/>
      </source>
      <depends_on name="quagga" optional="False"/>
      <depends_on name="dce-meta-1.2" optional="False"/>
      <depends_on name="iputils" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <module name="dce-umip-1.2">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
	<attribute name="revision" value="dce-1.2"/>
      </source>
      <depends_on name="dce-linux-1.2" optional="False"/>
      <depends_on name="dce-quagga-1.2" optional="False"/>
      <depends_on name="dce-meta-1.2" optional="False"/>
      <depends_on name="umip" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <!-- dce-1.3 -->
    <module name="dce-meta-1.3">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.3"/>
      </source>
      <depends_on name="ns-3.20" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <build type="none">
      </build>
    </module>

    <module name="dce-ns3-1.3">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.3"/>
      </source>
      <depends_on name="dce-meta-1.3" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="dce-linux-1.3">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.3"/>
      </source>
      <depends_on name="dce-meta-1.3" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-freebsd-1.3">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.3"/>
      </source>
      <depends_on name="dce-meta-1.3" optional="False"/>
      <depends_on name="freebsd-sim-10.0.0" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --enable-kernel-stack=$SRCDIR/../freebsd-sim/sys"/>
      </build>
    </module>

    <module name="dce-quagga-1.3">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
	<attribute name="revision" value="dce-1.3"/>
      </source>
      <depends_on name="quagga" optional="False"/>
      <depends_on name="dce-meta-1.3" optional="False"/>
      <depends_on name="iputils" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <module name="dce-umip-1.3">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
	<attribute name="revision" value="dce-1.3"/>
      </source>
      <depends_on name="dce-linux-1.3" optional="False"/>
      <depends_on name="dce-quagga-1.3" optional="False"/>
      <depends_on name="dce-meta-1.3" optional="False"/>
      <depends_on name="umip" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <!-- dce-1.4 -->
    <module name="dce-meta-1.4">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.4"/>
      </source>
      <depends_on name="ns-3.21" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <depends_on name="bash" optional="True"/>
      <build type="none">
      </build>
    </module>

    <module name="dce-ns3-1.4">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.4"/>
      </source>
      <depends_on name="dce-meta-1.4" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="dce-linux-1.4">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.4"/>
      </source>
      <depends_on name="dce-meta-1.4" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38-fix-01" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-freebsd-1.4">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.4"/>
      </source>
      <depends_on name="dce-meta-1.4" optional="False"/>
      <depends_on name="freebsd-sim-10.0.0" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --enable-kernel-stack=$SRCDIR/../freebsd-sim/sys"/>
      </build>
    </module>

    <module name="dce-quagga-1.4">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
	<attribute name="revision" value="dce-1.4"/>
      </source>
      <depends_on name="quagga" optional="False"/>
      <depends_on name="dce-meta-1.4" optional="False"/>
      <depends_on name="iputils" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <module name="dce-umip-1.4">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
	<attribute name="revision" value="dce-1.4"/>
      </source>
      <depends_on name="dce-linux-1.4" optional="False"/>
      <depends_on name="dce-quagga-1.4" optional="False"/>
      <depends_on name="dce-meta-1.4" optional="False"/>
      <depends_on name="umip" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <!-- dce-1.5 -->
    <module name="dce-meta-1.5">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.5"/>
      </source>
      <depends_on name="ns-3.22" optional="False"/>
      <depends_on name="elf-loader" optional="True"/>
      <depends_on name="iperf" optional="True"/>
      <depends_on name="ccnx" optional="True"/>
      <depends_on name="wget" optional="True"/>
      <depends_on name="thttpd" optional="True"/>
      <depends_on name="bash" optional="True"/>
      <build type="none">
      </build>
    </module>

    <module name="dce-ns3-1.5">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.5"/>
      </source>
      <depends_on name="dce-meta-1.5" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --prefix=$INSTALLDIR"/>
      </build>
    </module>

    <module name="dce-linux-1.5">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.5"/>
      </source>
      <depends_on name="dce-meta-1.5" optional="False"/>
      <depends_on name="net-next-sim-2.6.36" optional="False"/>
      <depends_on name="iproute-2.6.38-fix-01" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
	<attribute name="supported_os" value="linux;linux2"/>
	<attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --enable-kernel-stack=$SRCDIR/../net-next-sim-2.6.36/arch"/>
      </build>
    </module>

    <module name="dce-freebsd-1.5">
      <source type="mercurial">
        <attribute name="url" value="http://code.nsnam.org/ns-3-dce"/>
        <attribute name="module_directory" value="ns-3-dce"/>
        <attribute name="revision" value="dce-1.5"/>
      </source>
      <depends_on name="dce-meta-1.5" optional="False"/>
      <depends_on name="freebsd-sim-10.0.0" optional="False"/>
      <build type="waf" objdir="yes" sourcedir="ns-3-dce">
        <attribute name="supported_os" value="linux;linux2"/>
        <attribute name="configure_arguments" value="configure --prefix=$INSTALLDIR --with-ns3=$INSTALLDIR --with-elf-loader=$INSTALLDIR/lib --with-libaspect=$INSTALLDIR --enable-kernel-stack=$SRCDIR/../freebsd-sim/sys"/>
      </build>
    </module>

    <module name="dce-quagga-1.5">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-quagga"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-quagga/"/>
	<attribute name="revision" value="dce-1.5"/>
      </source>
      <depends_on name="quagga" optional="False"/>
      <depends_on name="dce-meta-1.5" optional="False"/>
      <depends_on name="iputils" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>

    <module name="dce-umip-1.5">
      <source type="mercurial">
	<attribute name="url" value="http://code.nsnam.org/thehajime/ns-3-dce-umip"/>
	<attribute name="module_directory" value="ns-3-dce/myscripts/ns-3-dce-umip/"/>
	<attribute name="revision" value="dce-1.5"/>
      </source>
      <depends_on name="dce-linux-1.5" optional="False"/>
      <depends_on name="dce-quagga-1.5" optional="False"/>
      <depends_on name="dce-meta-1.5" optional="False"/>
      <depends_on name="umip" optional="False"/>
      <build type="none">
	<attribute name="supported_os" value="linux;linux2"/>
      </build>
    </module>


<!--  Bake specific dependencies -->
    <module name="mercurial">
      <source type="system_dependency">
        <attribute name="dependency_test" value="hg"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="mercurial"/>
        <attribute name="name_yum" value="mercurial"/>
        <attribute name="more_information" value="Didn't find:   Mercurial package; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="subversion">
      <source type="system_dependency">
        <attribute name="dependency_test" value="svn"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="subversion"/>
        <attribute name="name_yum" value="subversion mod_dav_svn"/>
        <attribute name="more_information" value="Didn't find:   Subversion package (SVN); please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="unrar">
      <source type="system_dependency">
        <attribute name="dependency_test" value="unrar"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="unrar"/>
        <attribute name="name_yum" value="rar"/>
        <attribute name="more_information" value="Didn't find:   unrar - Unarchiver for .rar files; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="make">
      <source type="system_dependency">
        <attribute name="dependency_test" value="make"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="make"/>
        <attribute name="name_yum" value="rar"/>
        <attribute name="more_information" value="Didn't find:   make - Utility for Directing compilation.; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="patch">
      <source type="system_dependency">
        <attribute name="dependency_test" value="patch"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="patch"/>
        <attribute name="name_yum" value="patch"/>
        <attribute name="more_information" value="Didn't find:   patch - Apply a diff file to an original; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="tar">
      <source type="system_dependency">
        <attribute name="dependency_test" value="tar"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="tar"/>
        <attribute name="name_yum" value="tar"/>
        <attribute name="more_information" value="Didn't find:   tar - GNU version of the tar archiving utility; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="cvs">
      <source type="system_dependency">
        <attribute name="dependency_test" value="cvs"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="cvs"/>
        <attribute name="name_yum" value="cvs"/>
        <attribute name="more_information" value="Didn't find:   cvs - Concurrent Versions System; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="git">
      <source type="system_dependency">
        <attribute name="dependency_test" value="git"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="git"/>
        <attribute name="name_yum" value="git"/>
        <attribute name="more_information" value="Didn't find:   git - fast, scalable, distributed revision control system; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="bazaar">
      <source type="system_dependency">
        <attribute name="dependency_test" value="bzr"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="bzr"/>
        <attribute name="name_yum" value="bzr"/>
        <attribute name="more_information" value="Didn't find:   bzr - easy to use distributed version control system; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="cmake">
      <source type="system_dependency">
        <attribute name="dependency_test" value="cmake"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="cmake"/>
        <attribute name="name_yum" value="cmake"/>
        <attribute name="more_information" value="Didn't find:   git - fast, scalable, distributed revision control system; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="automake">
      <source type="system_dependency">
        <attribute name="dependency_test" value="autoconf"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="autoconf automake"/>
        <attribute name="name_yum" value="autoconf automake"/>
        <attribute name="more_information" value="Didn't find:   autoconf and automake - automatic configure and Makefile script builders; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="7z">
      <source type="system_dependency">
        <attribute name="dependency_test" value="7z"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="p7zip-full"/>
        <attribute name="name_yum" value="p7zip p7zip-plugins"/>
        <attribute name="more_information" value="Didn't find:   p7zip - 7z file archiver with high compression ratio; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="xz-utils">
      <source type="system_dependency">
        <attribute name="dependency_test" value="xz"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="xz-utils"/>
        <attribute name="name_yum" value="xz-devel"/>
        <attribute name="more_information" value="Didn't find:   xz utils - XZ-format compression utilities; please install it."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <!-- For the documentation -->
    <module name="python-sphinx">
      <source type="system_dependency">
        <attribute name="dependency_test" value="sphinx-build"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="python-sphinx"/>
        <attribute name="name_yum" value="python-sphinx"/>
        <attribute name="more_information" value="Didn't find:   python-sphinx - documentation generator for Python projects; please install it, if you think you will gennerate the documentation."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

    <module name="python-pygments">
      <source type="system_dependency">
        <attribute name="dependency_test" value="pygmentize"/>
        <attribute name="try_to_install" value="True"/>
        <attribute name="name_apt-get" value="python-pygments"/>
        <attribute name="name_yum" value="python-pygments"/>
        <attribute name="more_information" value="Didn't find:   python-pygments - syntax highlighting package written in Python; please install it, if you think you will gennerate the documentation."/>
      </source>
      <build type="none" objdir="no">
      </build>
    </module>

<!--  Bake dependencies end -->

  </modules>

  <predefined name="set-bake-env">
      <enable name="mercurial"/>
      <enable name="subversion"/>
      <enable name="unrar"/>
      <enable name="make"/>
      <enable name="patch"/>
      <enable name="tar"/>
      <enable name="cvs"/>
      <enable name="git"/>
      <enable name="bazaar"/>
      <enable name="cmake"/>
      <enable name="automake"/>
      <enable name="7z"/>
      <enable name="xz-utils"/>
      <enable name="python-sphinx"/>
      <enable name="python-pygments"/>
  </predefined>

 <predefined name="dbg">
    <append name="CFLAGS" value="-g"/>
    <append name="CXXFLAGS" value="-g"/>
    <configuration objdir="dbg"/>
    <configuration installdir="build_dbg"/>
  </predefined>

  <predefined name="opt">
    <configuration objdir="opt"/>
    <configuration installdir="build_opt"/>
<!--     <append name="configure_arguments" value=" -d optimized"/> -->
    <append name="CFLAGS" value="-O3"/>
    <append name="CXXFLAGS" value="-O3"/>
  </predefined>

  <predefined name="ns3">
    <enable name="ns-3-dev"/>
    <!--    <configuration installdir="." sourcedir="../source"/> -->
    <append module="ns-3-dev" name="configure_arguments" value="--enable-examples --enable-tests"/>
  </predefined>

  <predefined name="ns3-min">
    <enable name="ns-3-dev"/>
    <append module="ns-3-dev" name="configure_arguments" value=" --enable-modules=core,network,wifi"/> -->
  </predefined>

</configuration>
